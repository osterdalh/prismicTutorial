import type { NextPage } from 'next'
import Head from 'next/head'
import Layout from '../components/layout/Layout'
import styles from '../styles/Home.module.css'
import { Client } from '../prismic-configuration'
import Prismic from 'prismic-javascript'
import Link from 'next/link'
import { MainArticles, TrendingArticles } from '../components/layout/styles/index'

interface HomeProps {
  articles: any;
  trending: any;
}

const Home: NextPage = (props: HomeProps) => {
  console.log("pros", props)



  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>



      <Layout>
        <h1>Politics</h1>
        <MainArticles>
          {
            props.articles.results.map((article, index) => {
              return (
                <div key={article.id}>
                  <Link href={`article/${article.uid}`}>
                    <div>
                      <h3>{article.data.articletitle[0].text}</h3>
                      <p>{article.data.descriptionarticle[0].text}</p>
                    </div>
                  </Link>
                </div>
              )
            })
          }
        </MainArticles>
        <TrendingArticles>
          {
            props.trending.results.map((trending, index) => {
              return (
                <div key={trending.id}>
                  <Link href={`article/${trending.uid}`}>
                    <div>
                      <h3>{trending.data.trendingheader[0].text}</h3>
                      <p>{trending.data.trendingdescription[0].text}</p>
                    </div>
                  </Link>
                </div>
              )
            })
          }
        </TrendingArticles>

      </Layout>

    </div>
  )
}

export async function getServerSideProps() {
  const articles = await Client().query(
    Prismic.Predicates.at("document.tag", ["politics"])
  )
  const trending = await Client().query(
    Prismic.Predicates.at("document.type", "trending")
  )


  console.log("articles", articles)
  return {
    props: {
      articles,
      trending
    }
  }

}

export default Home
